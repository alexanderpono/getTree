<?php
// ============================================================================
//    PURPOSE:             Программный интерфейс вывода отладочной информации в стандартный поток
//
//    FUNCTIONAL AREA:     IO
//    NAME:                CStdOut.h.php 
//    VERSION:             ver.txt
//    AUTHORS:             Sasha
//    DESIGN REFERENCE:    
//    MODIFICATION:        
// ============================================================================
// ================================================================== CONSTANTS
// ================================================================== VARIABLES
// ================================================================== FUNCTIONS

$_IO_br = "<BR>\n";
$_IO_recodeFunction = "noConvert";

// ============================================================================
class CStdOut
// ============================================================================
{

   var $m_buf;
   var $m_mode;

   function CStdOut() {$this->m_buf = ""; $this->m_mode = ""; }

   // ============================================================================
   function setMode($o)
   // ============================================================================
   {
      $a = $this->m_mode;
      $this->m_mode = $o;
      return $a;
   }

   // ============================================================================
   function flush()
   // ============================================================================
   {
      $a = $this->m_buf;
      $this->m_buf = "";
      //UI_echo("mybuf", $a);
      return $a;
   }

   // ============================================================================
   function e($varName, $varValue)   
   // ============================================================================
   //вывод значения ($varValue) переменной ($varName)
   {
      $this->wr("$varName = $varValue<BR>");
   }

   // ============================================================================
   function wr($s)   
   // ============================================================================
   {
      if ($this->m_mode == "var")
      {
         $this->m_buf .= "$s";
      }
      else
      {
         global $_IO_recodeFunction;
         $s1 = $_IO_recodeFunction($s);

         print("$s1");
      };

   }

   // ============================================================================
   function ln($s)   
   // ============================================================================
   {
      $this->wr("$s<BR>");
   }

   // ============================================================================
   function msg($subName, $msg)   
   // ============================================================================
   //вывод строки ($msg) от имени процедуры ($subName)
   {
      $this->ln("<br>$subName : $msg");
   }

};


// ============================================================================
function UI_wr($s)
// ============================================================================
{
   global $_IO_recodeFunction;
   $s1 = $_IO_recodeFunction($s);

   print $s1;
}




// ============================================================================
function UI_ln($msg)
// ============================================================================
{
   global $_IO_br;
   
   UI_wr($msg . $_IO_br);
}


// ============================================================================
function UI_echo($varName, $varValue)
// ============================================================================
{
   UI_ln($varName . "=" . $varValue);
}


// ============================================================================
function UI_echoAArr($name, $arr)
// ============================================================================
{
   while (list($key, $value) = each($arr))
   {
      UI_echo($name.".".$key, $value);
   };
}

// ============================================================================
function UI_echo2($name, $arr)
// ============================================================================
{
	      print "<pre>";
	      print_r($arr);
	      print "</pre><hr>";
}

// ============================================================================
function noConvert($s)
// ============================================================================
{
   return $s;
}


?>