<?php
// ============================================================================
//    PURPOSE:             Êëàññ CDebugClass õğàíèò íàçâàíèå îáúåêòà, 
//                            êîòîğîå ìîæåò áûòü èñïîëüçîâàíî äëÿ 
//                            äèàãíîñòèêè îøèáîê
//    FUNCTIONAL AREA:     
//    NAME:                CDebugClass.h 
//    VERSION:             1.1
//    AUTHORS:             Sasha
//    DESIGN REFERENCE:    
//    MODIFICATION:        17.10.2001 - (version 1.0)
//    MODIFICATION:        16.03.2007 - (version 1.1)
// ============================================================================
// =================================================================== INCLUDES
// =================================================================== SYNOPSIS
// ================================================================== CONSTANTS
// ====================================================================== TYPES
// ================================================================= PROTOTYPES

// ============================================================================
class CDebugClass
// ============================================================================
{
   var $m_instanceName;
   var $m_io;

   var $m_debugMode; //åñëè true, òî íå îñòàíàâëèâàåò 
                     //âûïîëíåíèå ïğîãğàììû ïğè îøèáêàõ
                     //(äîáàâëåíî 15.12.2004)

   function CDebugClass($myName) 
   {
      global $_io;
      
      $this->m_instanceName      = $myName;
      
      $this->m_io                = $_io->getStdOut();
   }

   function getInstanceName() {return $this->m_instanceName;}
   function setInstanceName($name) {$this->m_instanceName = $name;}

   // ============================================================================
   function msg($subName, $msg)   
   // ============================================================================
   //âûâîä ñòğîêè ($msg) îò èìåíè ïğîöåäóğû ($subName) ıòîãî ıêçåìïëÿğà îáúåêòà
   {
      global $_IO_br;
      
      $objName = $this->getInstanceName();
      $this->m_io->ln("$_IO_br$objName::$subName() : $msg");
   }

   // ============================================================================
   function setIO($io)
   // ============================================================================
   {
      $this->m_io = $io;
   }

   // ============================================================================
   function stopIfEmpty($val, $subName, $message)
   // ============================================================================
   {
      $this->stopIfFalse(($val != ""), $subName, $message);
   }


   // ============================================================================
   function stopIfFalse($val, $subName, $message)
   // ============================================================================
   {
      if (!$val)
      {
         $this->msg($subName, $message);
         die();
      };
   }

   // ============================================================================
   function echoVar($varName, $val)   
   // ============================================================================
   //âûâîä ñòğîêè ($msg) îò èìåíè ïğîöåäóğû ($subName) ıòîãî ıêçåìïëÿğà îáúåêòà
   {
      $objName = $this->getInstanceName();
      UI_echo($this->getInstanceName() . " $varName", $val);
      //$this->m_io->ln("<br>$objName::$subName() : $msg");
   }

   // ============================================================================
   function setDebugMode($mode)
   // ============================================================================
      //(äîáàâëåíî 15.12.2004)
   {
      $this->m_debugMode = $mode;
   }
};


?>
